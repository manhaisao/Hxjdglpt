package com.xzz.hxjdglpt.db;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit.

import android.net.Uri;
import android.os.Parcel;
import android.os.Parcelable;
import android.text.TextUtils;

import com.xzz.hxjdglpt.utils.ConstantUtil;

import net.sourceforge.pinyin4j.PinyinHelper;

import java.util.Comparator;

import io.rong.common.ParcelUtils;
import io.rong.imlib.model.UserInfo;

/**
 * Entity mapped to table FRIEND.
 */
public class Friend extends UserInfo {

    private String displayName;
    private String diaplayPic;
    private char tag;
    private boolean isSelect = false;


    public Friend(String id, String name, Uri portraitUri, String displayName, String diaplayPic) {
        super(id, name, portraitUri);
        this.displayName = displayName;
        this.diaplayPic = diaplayPic;
    }

    public Friend(String id, String name, Uri portraitUri) {
        super(id, name, portraitUri);
    }

    public String getDisplayName() {
        return displayName;
    }

    public void setDisplayName(String displayName) {
        setName(displayName);
        this.displayName = displayName;
    }

    public String getDiaplayPic() {
        return diaplayPic;
    }

    public void setDiaplayPic(String diaplayPic) {
        setPortraitUri(Uri.parse(ConstantUtil.FILE_DOWNLOAD_URL + diaplayPic));
        this.diaplayPic = diaplayPic;
    }

    public char getTag() {
        return tag;
    }

    public void setTag(char tag) {
        this.tag = tag;
    }

    public Friend(Parcel in) {
        super(in);
        setDisplayName(ParcelUtils.readFromParcel(in));
        setDiaplayPic(ParcelUtils.readFromParcel(in));
    }

    public boolean isSelect() {
        return isSelect;
    }

    public void setSelect(boolean select) {
        isSelect = select;
    }

    @Override
    public void writeToParcel(Parcel dest, int flags) {
        super.writeToParcel(dest, flags);
        ParcelUtils.writeToParcel(dest, getDisplayName());
        ParcelUtils.writeToParcel(dest, getDiaplayPic());
    }

    @Override
    public int describeContents() {
        return 0;
    }

    public static final Parcelable.Creator<Friend> CREATOR = new Parcelable.Creator<Friend>() {
        @Override
        public Friend createFromParcel(Parcel in) {
            return new Friend(in);
        }

        @Override
        public Friend[] newArray(int size) {
            return new Friend[size];
        }
    };

    public boolean isExitsDisplayName() {
        return !TextUtils.isEmpty(displayName);
    }

    @Override
    public boolean equals(Object o) {
        if (o != null) {
            Friend friendInfo = (Friend) o;
            return (getUserId() != null && getUserId().equals(friendInfo.getUserId())) &&
                    (getName() != null && getName().equals(friendInfo.getName())) &&
                    (getPortraitUri() != null && getPortraitUri().equals(friendInfo
                            .getPortraitUri())) && (displayName != null && displayName.equals
                    (friendInfo.getDisplayName()) && (diaplayPic != null && diaplayPic.equals
                    (friendInfo.getDisplayName())));
        } else {
            return false;
        }
    }


    public static class ContactsComparactor implements Comparator<Friend> {

        @Override
        public int compare(Friend contacts1, Friend contacts2) {
            String name1 = contacts1.getDisplayName();
            String name2 = contacts2.getDisplayName();
            char char1 = upChar(getChar(name1.charAt(0)));
            char char2 = upChar(getChar(name2.charAt(0)));
            contacts1.setTag(char1);
            contacts2.setTag(char2);
            return char1 - char2;
        }

        private char getChar(char chineseCharacter) {

            String[] str = PinyinHelper.toHanyuPinyinStringArray(chineseCharacter);
            if (str == null) {
                return chineseCharacter;
            }
            // Log.i("whw", "str[0]="+str[0]);
            return str[0].charAt(0);
        }

        private char upChar(char c) {
            String str = String.valueOf(c).toUpperCase();
            return str.charAt(0);
        }

    }
}
